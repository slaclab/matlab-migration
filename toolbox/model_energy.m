function [energy, reg] = model_energy(name, rOpts)
%MODEL_ENERGY
% [ENERGY, ISBL] = MODEL_ENERGY(NAME, ROPTS) returns list of actual device
% energy for devices within flat energy parts of the machine. For unknown
% devices, the dump energy is returned.

% Features:

% Input arguments: none
%    NAME:  String or cellstr array of device names
%    ROPTS: Options 'TYPE=DESIGN' or 'TYPE=EXTANT'

% Output arguments:
%    ENERGY: List of energy set points
%    REG:    Number indicating device in Inj(7), BC1(8), BC2(3), Und(4)
%                                    NLCTA: MOD76(9), MOD77(10), MOD78(11)

% Compatibility: Version 7 and higher
% Called functions: model_init, model_energySetPoints, model_nameConvert

% Author: Henrik Loos, SLAC

% --------------------------------------------------------------------

if nargin < 2, rOpts={};end
if isempty(rOpts), rOpts={};end
rOpts=cellstr(rOpts);

[d,d,modelSimul]=model_init;
enDef=num2cell(model_energySetPoints); % GeV

[sys, accelerator] = getSystem();
if strcmp(accelerator, 'NLCTA')
    beamline={ ...
        'X810372T'	0.013	; ...
        'Y810372T'	0.013	; ...
        'X810391T'	0.026	; ...
        'Y810391T'	0.026	; ...
        'M810408T'	0.033	; ...
        'M810409T'	0.033	; ...
        'X810410T'	0.033	; ...
        'Y810410T'	0.033	; ...
        'P810430T'	0.033	; ...
        'X810430T'	0.033	; ...
        'Y810430T'	0.033	; ...
        'M810434T'	0.033	; ...
        'M810435T'	0.033	; ...
        'X810452T'	0.04	; ...
        'Y810452T'	0.04	; ...
        'X810470T'	0.053	; ...
        'Y810470T'	0.053	; ...
        'B810610'  enDef{1}	; ...
        'B810690'  enDef{1}	; ...
        'B810910'  enDef{1}	; ...
        'B810990'  enDef{1}	; ...
        'Q810480T'	enDef{1}	; ...
        'M810480T'	enDef{1}	; ...
        'M810481T'	enDef{1}	; ...
        'X810480T'	enDef{1}	; ...
        'Y810480T'	enDef{1}	; ...
        'Q810530T'	enDef{1}	; ...
        'M810530T'	enDef{1}	; ...
        'M810531T'	enDef{1}	; ...
        'X810530T'	enDef{1}	; ...
        'Y810530T'	enDef{1}	; ...
        'YCOL0540'	enDef{1}	; ...
        'XCOL0540'	enDef{1}	; ...
        'Q810560T'	enDef{1}	; ...
        'M810560T'	enDef{1}	; ...
        'M810561T'	enDef{1}	; ...
        'X810560T'	enDef{1}	; ...
        'Y810560T'	enDef{1}	; ...
        'Q810575T'	enDef{1}	; ...
        'M810575T'	enDef{1}	; ...
        'M810576T'	enDef{1}	; ...
        'X810575T'	enDef{1}	; ...
        'Y810575T'	enDef{1}	; ...
        'P810585T'	enDef{1}	; ...
        'Q810590T'	enDef{1}	; ...
        'M810590T'	enDef{1}	; ...
        'M810591T'	enDef{1}	; ...
        'X810590T'	enDef{1}	; ...
        'Y810590T'	enDef{1}	; ...
        'P810595T'  enDef{1}	; ...
        'X810610T'	enDef{1}	; ...
        'Q810630T'	enDef{1}	; ...
        'M810630T'	enDef{1}	; ...
        'M810631T'	enDef{1}	; ...
        'X810630T'	enDef{1}	; ...
        'Y810630T'	enDef{1}	; ...
        'Q810650T'	enDef{1}	; ...
        'M810650T'	enDef{1}	; ...
        'M810651T'	enDef{1}	; ...
        'X810650T'	enDef{1}	; ...
        'Y810650T'	enDef{1}	; ...
        'Q810670T'	enDef{1}	; ...
        'M810670T'	enDef{1}	; ...
        'M810671T'	enDef{1}	; ...
        'X810670T'	enDef{1}	; ...
        'Y810670T'	enDef{1}	; ...
        'X810690T'	enDef{1}	; ...
        'Q810710T'	enDef{1}	; ...
        'M810710T'	enDef{1}	; ...
        'M810711T'	enDef{1}	; ...
        'X810710T'	enDef{1}	; ...
        'Y810710T'	enDef{1}	; ...
        'Q810730T'	enDef{1}	; ...
        'M810730T'	enDef{1}	; ...
        'M810731T'	enDef{1}	; ...
        'X810730T'	enDef{1}	; ...
        'Y810730T'	enDef{1}	; ...
        'Q810750T'	enDef{1}	; ...
        'M810750T'	enDef{1}	; ...
        'M810751T'	enDef{1}	; ...
        'X810750T'	enDef{1}	; ...
        'Y810750T'	enDef{1}	; ...
        'P810770T'  enDef{1}	; ...
        'P810790T'	enDef{1}	; ...
        'P810800T'  enDef{1}	; ...
        'W810810T'	enDef{1}	; ...
        'Q810850T'	enDef{1}	; ...
        'M810850T'	enDef{1}	; ...
        'M810851T'	enDef{1}	; ...
        'X810850T'	enDef{1}	; ...
        'Y810850T'	enDef{1}	; ...
        'Q810870T'	enDef{1}	; ...
        'M810870T'	enDef{1}	; ...
        'M810871T'	enDef{1}	; ...
        'X810870T'	enDef{1}	; ...
        'Y810870T'	enDef{1}	; ...
        'Q810890T'	enDef{1}	; ...
        'M810890T'	enDef{1}	; ...
        'M810891T'	enDef{1}	; ...
        'X810890T'	enDef{1}	; ...
        'Y810890T'	enDef{1}	; ...
        'X810910T'	enDef{1}	; ...
        'Q810930T'	enDef{1}	; ...
        'M810930T'	enDef{1}	; ...
        'M810931T'	enDef{1}	; ...
        'X810930T'	enDef{1}	; ...
        'Y810930T'	enDef{1}	; ...
        'Q810950T'	enDef{1}	; ...
        'M810950T'	enDef{1}	; ...
        'M810951T'	enDef{1}	; ...
        'X810950T'	enDef{1}	; ...
        'Y810950T'	enDef{1}	; ...
        'Q810970T'	enDef{1}	; ...
        'M810970T'	enDef{1}	; ...
        'M810971T'	enDef{1}	; ...
        'X810970T'	enDef{1}	; ...
        'Y810970T'	enDef{1}	; ...
        'X810990T'	enDef{1}	; ...
        'P811015T'  enDef{1}	; ...
        'Q811030T'	enDef{1}	; ...
        'M811030T'	enDef{1}	; ...
        'M811031T'	enDef{1}	; ...
        'X811030T'	enDef{1}	; ...
        'Y811030T'	enDef{1}	; ...
        'Q811070T'	enDef{1}	; ...
        'M811070T'	enDef{1}	; ...
        'M811071T'	enDef{1}	; ...
        'X811070T'	enDef{1}	; ...
        'Y811070T'	enDef{1}	; ...
        'W811090T'	enDef{1}	; ...
        'Q811110T'	enDef{1}	; ...
        'M811110T'	enDef{1}	; ...
        'M811111T'	enDef{1}	; ...
        'X811110T'	enDef{1}	; ...
        'Y811110T'	enDef{1}	; ...
        'P811120T'	enDef{1}	; ...
        'Q811130T'	enDef{1}	; ...
        'M821130T'	enDef{1}	; ...
        'M821131T'	enDef{1}	; ...
        'X811130T'	enDef{1}	; ...
        'Y811130T'	enDef{1}	; ...
        'PA51135T'	enDef{1}	; ...
        'PROF1210'  enDef{1}	; ...
        'Q811250T'	enDef{1}	; ...
        'M821250T'	enDef{1}	; ...
        'M821251T'	enDef{1}	; ...
        'X811250T'	enDef{1}	; ...
        'Y811250T'	enDef{1}	; ...
        'PROF1325'  enDef{1}	; ...
        'Q811350T'	enDef{1}	; ...
        'M821350T'	enDef{1}	; ...
        'M821351T'	enDef{1}	; ...
        'X811350T'	enDef{1}	; ...
        'Y811350T'	enDef{1}	; ...
        'K821360T'  enDef{2}    ; ...
        'Q811450T'	enDef{2}	; ...
        'M821450T'	enDef{2}	; ...
        'M821451T'	enDef{2}	; ...
        'X811450T'	enDef{2}	; ...
        'Y811450T'	enDef{2}	; ...
        'Q811510T'	enDef{2}	; ...
        'M821510T'	enDef{2}	; ...
        'M821511T'	enDef{2}	; ...
        'X811510T'	enDef{2}	; ...
        'Y811510T'	enDef{2}	; ...
        'Q811530T'	enDef{2}	; ...
        'M821530T'	enDef{2}	; ...
        'M821531T'	enDef{2}	; ...
        'X811540T'	enDef{2}	; ...
        'Y811545T'	enDef{2}	; ...
        'P811550T'	enDef{2}	; ...
        'Q811565T'	enDef{2}	; ...
        'M821565T'	enDef{2}	; ...
        'M821566T'	enDef{2}	; ...
        'X811575T'	enDef{2}	; ...
        'Y811580T'	enDef{2}	; ...
        'P811610T'	enDef{2}	; ...
        'X821635T'	enDef{2}	; ...
        'Y821640T'	enDef{2}	; ...
        'Q811650T'	enDef{2}	; ...
        'M821650T'	enDef{2}	; ...
        'M821651T'	enDef{2}	; ...
        'X811650T'	enDef{2}	; ...
        'Y811650T'	enDef{2}	; ...
        'P811665T'	enDef{2}	; ...
        'P811700T'	enDef{2}	; ...
        'P811705T'	enDef{2}	; ...
        'X811690T'	enDef{2}	; ...
        'Y811695T'	enDef{2}	; ...
        'Q811720T'	enDef{2}	; ...
        'M821720T'	enDef{2}	; ...
        'M821721T'	enDef{2}	; ...
        'X811720T'	enDef{2}	; ...
        'Y811720T'	enDef{2}	; ...
        'Q821740T'	enDef{2}	; ...
        'P811755T'	enDef{2}	; ...
        'Q821770T'	enDef{2}	; ...
        'Q811790T'	enDef{2}	; ...
        'M821790T'	enDef{2}	; ...
        'X811790T'	enDef{2}	; ...
        'Y811790T'	enDef{2}	; ...
        'P811805T'	enDef{2}	; ...
        'P811810T'	enDef{2}	; ...
        'P811845T'	enDef{2}	; ...
        'X821835T'	enDef{2}	; ...
        'Y821840T'	enDef{2}	; ...
        'Q811860T'	enDef{2}	; ...
        'M821860T'	enDef{2}	; ...
        'M821861T'	enDef{2}	; ...
        'X811860T'	enDef{2}	; ...
        'Y811860T'	enDef{2}	; ...
        'Q821880T'	enDef{2}	; ...
        'P811895T'	enDef{2}	; ...
        'Q821910T'	enDef{2}	; ...
        'X821925T'	enDef{2}	; ...
        'P811930T'	enDef{2}	; ...
        'Q811940T'	enDef{2}	; ...
        'M821940T'	enDef{2}	; ...
        'M821941T'	enDef{2}	; ...
        'X821950T'	enDef{2}	; ...
        'Y821955T'	enDef{2}	; ...
        'P811975T'	enDef{2}	; ...
        'X822045T'	enDef{2}	; ...
        'Y822050T'	enDef{2}	; ...
        'Q812020T'	enDef{2}	; ...
        'M822020T'	enDef{2}	; ...
        'M822021T'	enDef{2}	; ...
        'Q822050T'	enDef{2}	; ...
        'P812055T'	enDef{2}	; ...
        'Q812070T'	enDef{2}	; ...
        'M822070T'	enDef{2}	; ...
        'M822071T'	enDef{2}	; ...
        'PROF2190'  enDef{2}	; ...
        'M822220T'	enDef{2}	; ...
        'PROF2250'  enDef{2}	; ...
        'W812270T'	enDef{2}	; ...
        'P812290T'	enDef{2}	; ...
        };
    name=model_nameConvert(cellstr(name),'MAD');
    [isBL,id]=ismember(name,beamline(:,1));isBL=reshape(isBL,1,[]);
    energy(1,isBL)=[beamline{id(isBL),2}];
    energy(1,~isBL)=0;
    reg=energy*0;
    reg(energy < enDef{1})=9;
    reg(energy >= enDef{1} & energy < enDef{2})=10;
    reg(energy >= enDef{2} & isBL)=11;
    reg(~isBL)=0;
elseif strcmp(accelerator, 'XTA')
    energy=repmat(enDef{2},1,numel(name));
    reg=repmat(13,1,numel(name));
elseif strcmp(accelerator, 'ASTA')
    energy=repmat(enDef{1},1,numel(name));
    reg=repmat(14,1,numel(name));
elseif strcmp(accelerator, 'FACET')
    energy=repmat(enDef{end},1,numel(name));
    reg=repmat(11,1,numel(name));
else
    if modelSimul
        [enInj,enUnd]=deal(enDef{[2 5]});
    else
        enInj=lcaGet('BEND:IN20:751:BDES');
        if enInj < 0.01
            enInj=lcaGet('BEND:IN20:931:BDES'); % Use BXS if BX02 off
        end
        enUnd=lcaGet('BEND:DMPH:400:BDES');
    end

    % Determine if DESIGN.
    if ~isempty(rOpts)
        isType=find(strncmpi(rOpts(1,:),'TYPE=',5),1,'last');
        if ~isempty(isType) && strcmpi(rOpts{isType}(6:end),'DESIGN')
            enDef={0.006 0.135 0.25 4.3 13.64}';
            [enInj,enUnd]=deal(enDef{[2 5]});
        end
    end


    [enGun,enBC1,enBC2]=deal(enDef{[1 3 4]});
    enL0b=0.064; % GeV

    beamline={ ...
        'SOL1BK'   enGun; ...
        'SOL1'     enGun; ...
        'CQ01'     enGun; ...
        'XC01'     enGun; ...
        'YC01'     enGun; ...
        'XC00'     enGun; ...
        'YC00'     enGun; ...
        'SQ01'     enGun; ...
        'VV01'     enGun; ...
        'AM00'     enGun; ...
        'AM01'     enGun; ...
        'YAG01'    enGun; ...
        'FC01'     enGun; ...
        'IM01'     enGun; ...
        'XC01'     enGun; ...
        'YC01'     enGun; ...
        'BPM2'     enGun; ...
        %
        'BXG'      enGun; ...
        'QG02'     enGun; ...
        'XCG1'     enGun; ...
        'YCG1'     enGun; ...
        'BPMG1'    enGun; ...
        'QG03'     enGun; ...
        'XCG2'     enGun; ...
        'YCG2'     enGun; ...
        'YAGG1'    enGun; ...
        'CRG1'     enGun; ...
        'FCG1'     enGun; ...
        %
        'BPM3'     enGun; ...
        'CR01'     enGun; ...
        'YAG02'    enGun; ...
        'L0A'      enGun; ...
        'SOL2'     enGun; ...
        'XC02'     enGun; ...
        'YC02'     enGun; ...
        'XC03'     enL0b; ...
        'YC03'     enL0b; ...
        'YAG03'    enL0b; ...
        'QA01'     enL0b; ...
        'PH01'     enL0b; ...
        'QA02'     enL0b; ...
        'BPM5'     enL0b; ...
        'L0B'      enL0b; ...
        'XC04'     enL0b; ...
        'YC04'     enL0b; ...
        'XC05'     enInj; ...
        'YC05'     enInj; ...
        'QE01'     enInj; ...
        'BPM6'     enInj; ...
        'IM02'     enInj; ...
        'VV02'     enInj; ...
        'QE02'     enInj; ...
        'BXH1'     enInj; ...
        'BXH2'     enInj; ...
        'OTRH1'    enInj; ...
        'LH_UND'   enInj; ...
        'HTRUND'   enInj; ...
        'YAG04'    enInj; ...
        'OTRH2'    enInj; ...
        'BXH3'     enInj; ...
        'BXH4'     enInj; ...
        'TCAV0'    enInj; ...
        'XC06'     enInj; ...
        'YC06'     enInj; ...
        'QE03'     enInj; ...
        'BPM8'     enInj; ...
        'XC07'     enInj; ...
        'YC07'     enInj; ...
        'QE04'     enInj; ...
        'BPM9'     enInj; ...
        'WS01'     enInj; ...
        'OTR1'     enInj; ...
        'VV03'     enInj; ...
        'RST1'     enInj; ...
        'WS02'     enInj; ...
        'OTR2'     enInj; ...
        'BPM10'    enInj; ...
        'WS03'     enInj; ...
        'OTR3'     enInj; ...
        'QM01'     enInj; ...
        'BPM11'    enInj; ...
        'XC08'     enInj; ...
        'YC08'     enInj; ...
        'VV04'     enInj; ...
        'QM02'     enInj; ...
        'BPM12'    enInj; ...
        'BX01'     enInj; ...
        'OTR4'     enInj; ...
        'XC09'     enInj; ...
        'YC09'     enInj; ...
        'QB'       enInj; ...
        'BPM13'    enInj; ...
        'WS04'     enInj; ...
        'BX02'     enInj; ...
        'XC10'     enInj; ...
        'YC10'     enInj; ...
        'QM03'     enInj; ...
        'BPM14'    enInj; ...
        'QM04'     enInj; ...
        'BPM15'    enInj; ...
        'IM03'     enInj; ...
        %
        'XCS1'     enInj; ...
        'YCS1'     enInj; ...
        'VVS1'     enInj; ...
        'YAGS1'    enInj; ...
        'BPMS1'    enInj; ...
        'BXS'      enInj; ...
        'QS01'     enInj; ...
        'BPMS2'    enInj; ...
        'XCS2'     enInj; ...
        'YCS2'     enInj; ...
        'QS02'     enInj; ...
        'IMS1'     enInj; ...
        'BPMS3'    enInj; ...
        'YAGS2'    enInj; ...
        'OTRS1'    enInj; ...
        'SDMP'     enInj; ...
        %
        'VVX2'     enBC1; ...
        'Q21201'   enBC1; ...
        'BPM21201' enBC1; ...
        'IMBC1I'   enBC1; ...
        'QM11'     enBC1; ...
        'BX11'     enBC1; ...
        'CQ11'     enBC1; ...
        'BX12'     enBC1; ...
        'BPMS11'   enBC1; ...
        'CE11'     enBC1; ...
        'OTR11'    enBC1; ...
        'BX13'     enBC1; ...
        'SQ13'     enBC1; ...
        'CQ12'     enBC1; ...
        'BX14'     enBC1; ...
        'BL11'     enBC1; ...
        'QM12'     enBC1; ...
        'IMBC1O'   enBC1; ...
        'QM13'     enBC1; ...
        'BPMM12'   enBC1; ...
        'BL12'     enBC1; ...
        'XCM13'    enBC1; ...
        'YCM12'    enBC1; ...
        'WS11'     enBC1; ...
        'WS12'     enBC1; ...
        'OTR12'    enBC1; ...
        'PH02'     enBC1; ...
        'XC21302'  enBC1; ...
        'YC21303'  enBC1; ...
        'WS13'     enBC1; ...
        'Q21301'   enBC1; ...
        'BPM21301' enBC1; ...
        'TD11'     enBC1; ...
        'QM14'     enBC1; ...
        'BPMM14'   enBC1; ...
        'XCM14'    enBC1; ...
        'YCM15'    enBC1; ...
        'QM15'     enBC1; ...
        %
        'Q24701A'  enBC2; ...
        'Q24701B'  enBC2; ...
        'BPM24701' enBC2; ...
        'Q24701B'  enBC2; ...
        'IMBC2I'   enBC2; ...
        'VV21'     enBC2; ...
        'QM21'     enBC2; ...
        'BX21'     enBC2; ...
        'CQ21'     enBC2; ...
        'BX22'     enBC2; ...
        'BPMS21'   enBC2; ...
        'CE21'     enBC2; ...
        'OTR21'    enBC2; ...
        'BX23'     enBC2; ...
        'CQ22'     enBC2; ...
        'BX24'     enBC2; ...
        'BL21'     enBC2; ...
        'QM22'     enBC2; ...
        'VV22'     enBC2; ...
        'Q24901A'  enBC2; ...
        'BPM24901' enBC2; ...
        'Q24901B'  enBC2; ...
        };

    name=model_nameConvert(cellstr(name),'MAD');
    [isBL,id]=ismember(name,beamline(:,1));isBL=reshape(isBL,1,[]);
    energy(1,isBL)=[beamline{id(isBL),2}];
    energy(1,~isBL)=enUnd;
    reg=energy*0;
    reg(energy < 0.2)=7;
    reg(energy >= 0.2 & energy < 3)=8;
    reg(energy >= 3.0 & isBL)=3;
    reg(~isBL)=4;
end
