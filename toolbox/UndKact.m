function K = UndKact ( slots )

% Temporary function to provide undulator K coefficients while the EPICS
% support is being set up.

%      01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16,
%      17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
    
I = [  00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01, 01, 01, ...
       01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01 ];
  
C = { +3.5000060E+00, +2.7390420E-03, -1.8125980E-05, -2.4274690E-06, -2.3605080E-07, +2.2512650E-08; ...
      +3.4994860E+00, +2.9504410E-03, -3.9910520E-05, -3.3967580E-06, -3.1361840E-07, +4.8645820E-09; ...
      +3.4991380E+00, +2.7373810E-03, -4.5488270E-05, -2.2464520E-06, -3.4394010E-07, -4.5946200E-09; ...
      +0.0000000E+00, +0.0000000E+00, +0.0000000E+00, +0.0000000E+00, +0.0000000E+00, +0.0000000E+00; ...
      +3.4981690E+00, +2.8207500E-03, -5.0490950E-05, -3.6055920E-06, -1.3966950E-07, +2.0027710E-08; ...
      +3.4977400E+00, +2.6715780E-03, -2.9344700E-05, -2.3762320E-06, -3.6642540E-07, +2.3208560E-08; ...
      +3.4973140E+00, +2.8544220E-03, -1.2356300E-05, -9.2561630E-07, -8.4774890E-07, -2.3554820E-08; ...
      +3.4968250E+00, +2.7252600E-03, -2.7556190E-05, -4.3790640E-06, -2.8841840E-07, +3.8297890E-08; ...
      +3.4963890E+00, +2.6723530E-03, -3.7806060E-05, -7.9094620E-07, -2.0584890E-07, -1.6438120E-08; ...
      +3.4958150E+00, +2.7019780E-03, -4.2914530E-05, -4.8556260E-07, -3.2097590E-07, -2.0979700E-08; ...
      +3.4954580E+00, +2.6695050E-03, -3.1174320E-05, -1.0276870E-06, -2.0750390E-07, +1.4706300E-08; ...
      +3.4949220E+00, +2.6899940E-03, -3.5847870E-05, -1.0861430E-06, -3.0888640E-07, +5.0753720E-10; ...
      +3.4945010E+00, +2.7704190E-03, -1.2107150E-05, -1.0446280E-06, -6.1537820E-07, -1.1170740E-09; ...
      +3.4940370E+00, +2.8065240E-03, -3.0595200E-05, -2.4524240E-06, -3.5336890E-07, +1.6015530E-08; ...
      +3.4936220E+00, +2.6574180E-03, -2.7768070E-05, -1.2097850E-07, -4.3015180E-07, -1.7409290E-08; ...
      +3.4931393E+00, +2.8607090E-03, -2.6068000E-05, -1.5150000E-06, -4.2600000E-07, +8.0000000E-09; ...
      +3.4926700E+00, +2.6796240E-03, -3.6609740E-05, -2.9178970E-06, -1.6670800E-07, +2.4501370E-08; ...
      +3.4922240E+00, +2.7815730E-03, -1.9589630E-05, -4.4530510E-06, -6.0063340E-07, +4.4272390E-08; ...
      +3.4917640E+00, +2.7894760E-03, -2.7231730E-05, -3.2247490E-07, -3.3425820E-07, -1.4467890E-08; ...
      +3.4912720E+00, +2.6244220E-03, -1.0458850E-05, -2.9662540E-07, -4.2268910E-07, -3.7719060E-08; ...
      +3.4908520E+00, +2.6043390E-03, -3.0023220E-05, -1.0305010E-06, -2.8874110E-07, -6.1291090E-10; ...
      +3.4903554E+00, +2.6633150E-03, -4.2562000E-05, -1.9410000E-06, -2.5700000E-07, -4.0000000E-09; ...
      +3.4899160E+00, +2.5553720E-03, -3.1451980E-05, -1.1986160E-06, -3.0521760E-07, -7.6755610E-09; ...
      +3.4894856E+00, +2.6945480E-03, -4.0346000E-05, -1.5770000E-06, -3.2100000E-07, -1.5000000E-08; ...
      +3.4890186E+00, +2.9108570E-03, -2.6934000E-05, -2.7710000E-06, -3.7500000E-07, +2.3000000E-08; ...
      +3.4885334E+00, +2.6550540E-03, -4.8556000E-05, -2.3700000E-06, -2.6200000E-07, +1.3000000E-08; ...
      +3.4881010E+00, +2.5816450E-03, -2.5122070E-05, -1.2781650E-06, -5.1167980E-07, -4.3002700E-09; ...
      +3.4876110E+00, +2.5593790E-03, -3.9254000E-05, +9.2400000E-07, -2.8000000E-07, -3.2000000E-08; ...
      +3.4871655E+00, +2.6825640E-03, -4.5424000E-05, -2.0830000E-06, -1.9100000E-07, +1.9000000E-08; ...
      +3.4867330E+00, +2.6543830E-03, -4.4653120E-05, -1.3804500E-06, -2.4623780E-07, +2.7826430E-09; ...
      +3.4862150E+00, +2.5536900E-03, -2.3838100E-05, -7.8405520E-07, -2.2796540E-07, -1.5948220E-08; ...
      +3.4857871E+00, +2.6443650E-03, -3.2561000E-05, -3.4070000E-06, -4.1900000E-07, -2.0000000E-09; ...
      +3.4853341E+00, +2.7010250E-03, -2.4929000E-05, -1.8750000E-06, -3.0100000E-07, +8.0000000E-09; ...
   };
  
  
K = 0;

n = length ( slots );

if  ( ~n )
    return;
end

K = zeros ( 1, n );

for k = 1 : n
    slot = slots ( k );
    
    if ( slot < 1 || slot > 33 )
        continue;
    end

    SliderPV = sprintf ( 'USEG:UND1:%d50:TMXPOSC', slot );
    KactPV   = sprintf ( 'USEG:UND1:%d50:KACT',    slot );

    if ( ~I ( slot ) )
        lcaPut ( KactPV, K ( k ) );
        continue;
    end

    x = lcaGet ( SliderPV );

    if ( x > 6 || x < -6 )
        lcaPut ( KactPV, K ( k ) );
        continue;
    else
        K ( k ) = C { slot, 1 };
    
        for j = 2 : length ( C { slot } )
            K ( k ) = K ( k ) + C { slot, j } * ( -x )^( j - 1 );
        end
    end

    lcaPut ( KactPV, K ( k ) );
end

end