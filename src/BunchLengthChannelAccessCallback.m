% Bunch Length Channel Access timer callback
% Mike Zelazny - zelazny@stanford.edu

function BunchLengthChannelAccessCallback()

global gBunchLength;

if isfield(gBunchLength, 'skip')
    if gBunchLength.skip
        return;
    end
end

if gBunchLength.debug
    disp('BunchLengthChannelAccessCallback - entered');
end

try
    
% TORO TMIT EGU
pv = gBunchLength.toro.tmit.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.toro.tmit.egu, ...
 gBunchLength.toro.ts, ...
 gBunchLength.toro.tmit.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.toro.tmit.egu_pv.name, ...
        gBunchLength.toro.tmit.egu_pv.force, ...
        gBunchLength.toro.tmit.egu, ...
        gBunchLength.toro.ts);
if isempty(gBunchLength.toro.tmit.egu{1})
    gBunchLength.toro.tmit.egu_pv.force = {1};
else
    gBunchLength.toro.tmit.egu_pv.force = {0};
end

% Selected Screen
if ~isfield(gBunchLength.screen,'movable')
    gBunchLength.screen.movable = 1;
end
if gBunchLength.screen.movable
pv = gBunchLength.screen.pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end 
[gBunchLength.screen.value, ...
 gBunchLength.screen.ts, ...
 gBunchLength.screen.pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.pv.name, ...
        gBunchLength.screen.pv.force, ...
        gBunchLength.screen.value, ...
        gBunchLength.screen.ts);
gBunchLength.screen.pv.force = {0};
end

pv = gBunchLength.screen.rb_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.screen.rb_value, ...
 gBunchLength.screen.rb_ts, ...
 gBunchLength.screen.rb_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.rb_pv.name, ...
        gBunchLength.screen.rb_pv.force, ...
        gBunchLength.screen.rb_value, ...
        gBunchLength.screen.rb_ts);
gBunchLength.screen.rb_pv.force = {0};

pv = gBunchLength.screen.blen_phase.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.screen.blen_phase.desc, ...
 gBunchLength.screen.blen_phase.ts, ...
 gBunchLength.screen.blen_phase.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.blen_phase.desc_pv.name, ...
        gBunchLength.screen.blen_phase.desc_pv.force, ...
        gBunchLength.screen.blen_phase.desc, ...
        gBunchLength.screen.blen_phase.ts);
gBunchLength.screen.blen_phase.desc_pv.force = {0};

pv = gBunchLength.screen.blen_phase.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.screen.blen_phase.egu, ...
 gBunchLength.screen.blen_phase.ts, ...
 gBunchLength.screen.blen_phase.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.blen_phase.egu_pv.name, ...
        gBunchLength.screen.blen_phase.egu_pv.force, ...
        gBunchLength.screen.blen_phase.egu, ...
        gBunchLength.screen.blen_phase.ts);    
gBunchLength.screen.blen_phase.egu_pv.force = {0};

pv = gBunchLength.screen.maxImgs_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.screen.maxImgs.value, ...
 gBunchLength.screen.ts, ...
 gBunchLength.screen.maxImgs_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.maxImgs_pv.name, ...
        gBunchLength.screen.maxImgs_pv.force, ...
        gBunchLength.screen.maxImgs.value, ...
        gBunchLength.screen.ts);
gBunchLength.screen.maxImgs_pv.force = {0};

pv = gBunchLength.screen.image.resolution_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.screen.image.resolution, ...
 gBunchLength.screen.ts, ...
 gBunchLength.screen.image.resolution_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.screen.image.resolution_pv.name, ...
        gBunchLength.screen.image.resolution_pv.force, ...
        gBunchLength.screen.image.resolution, ...
        gBunchLength.screen.ts);
gBunchLength.screen.image.resolution_pv.force = {0};

% Beam Rate
pv = gBunchLength.rate.pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.rate.value, ...
 gBunchLength.rate.ts, ...
 gBunchLength.rate.pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.rate.pv.name, ...
        gBunchLength.rate.pv.force, ...
        gBunchLength.rate.value, ...
        gBunchLength.rate.ts);
gBunchLength.rate.pv.force = {0};

pv = gBunchLength.rate.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.rate.desc, ...
 gBunchLength.rate.ts, ...
 gBunchLength.rate.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.rate.desc_pv.name, ...
        gBunchLength.rate.desc_pv.force, ...
        gBunchLength.rate.desc, ...
        gBunchLength.rate.ts);
gBunchLength.rate.desc_pv.force = {0};
    
pv = gBunchLength.rate.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.rate.egu, ...
 gBunchLength.rate.ts, ...
 gBunchLength.rate.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.rate.egu_pv.name, ...
        gBunchLength.rate.egu_pv.force, ...
        gBunchLength.rate.egu, ...
        gBunchLength.rate.ts);
gBunchLength.rate.egu_pv.force = {0};

% TCAV
pv = gBunchLength.tcav.pdes_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pdes.value, ...
 gBunchLength.tcav.pdes.ts, ...
 gBunchLength.tcav.pdes_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pdes_pv.name, ...
        gBunchLength.tcav.pdes_pv.force, ...
        gBunchLength.tcav.pdes.value, ...
        gBunchLength.tcav.pdes.ts);
gBunchLength.tcav.pdes_pv.force = {0};
   
pv = gBunchLength.tcav.pdes.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pdes.desc, ...
 gBunchLength.tcav.pdes.ts, ...
 gBunchLength.tcav.pdes.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pdes.desc_pv.name, ...
        gBunchLength.tcav.pdes.desc_pv.force, ...
        gBunchLength.tcav.pdes.desc, ...
        gBunchLength.tcav.pdes.ts);
gBunchLength.tcav.pdes.desc_pv.force = {0};
   
pv = gBunchLength.tcav.pdes.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pdes.egu, ...
 gBunchLength.tcav.pdes.ts, ...
 gBunchLength.tcav.pdes.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pdes.egu_pv.name, ...
        gBunchLength.tcav.pdes.egu_pv.force, ...
        gBunchLength.tcav.pdes.egu, ...
        gBunchLength.tcav.pdes.ts);
gBunchLength.tcav.pdes.egu_pv.force = {0};

pv = gBunchLength.tcav.pact_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pact.value, ...
 gBunchLength.tcav.pact.ts, ...
 gBunchLength.tcav.pact_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pact_pv.name, ...
        gBunchLength.tcav.pact_pv.force, ...
        gBunchLength.tcav.pact.value, ...
        gBunchLength.tcav.pact.ts);
gBunchLength.tcav.pact_pv.force = {0};

pv = gBunchLength.tcav.pact.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pact.desc, ...
 gBunchLength.tcav.pact.ts, ...
 gBunchLength.tcav.pact.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pact.desc_pv.name, ...
        gBunchLength.tcav.pact.desc_pv.force, ...
        gBunchLength.tcav.pact.desc, ...
        gBunchLength.tcav.pact.ts);
gBunchLength.tcav.pact.desc_pv.force = {0};
   
pv = gBunchLength.tcav.pact.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.pact.egu, ...
 gBunchLength.tcav.pact.ts, ...
 gBunchLength.tcav.pact.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.pact.egu_pv.name, ...
        gBunchLength.tcav.pact.egu_pv.force, ...
        gBunchLength.tcav.pact.egu, ...
        gBunchLength.tcav.pact.ts);
gBunchLength.tcav.pact.egu_pv.force = {0};

pv = gBunchLength.tcav.aact_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.aact.value, ...
 gBunchLength.tcav.aact.ts, ...
 gBunchLength.tcav.aact_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.aact_pv.name, ...
        gBunchLength.tcav.aact_pv.force, ...
        gBunchLength.tcav.aact.value, ...
        gBunchLength.tcav.aact.ts);
gBunchLength.tcav.aact_pv.force = {0};

pv = gBunchLength.tcav.aact.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.aact.desc, ...
 gBunchLength.tcav.aact.ts, ...
 gBunchLength.tcav.aact.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.aact.desc_pv.name, ...
        gBunchLength.tcav.aact.desc_pv.force, ...
        gBunchLength.tcav.aact.desc, ...
        gBunchLength.tcav.aact.ts);
gBunchLength.tcav.aact.desc_pv.force = {0};

pv = gBunchLength.tcav.aact.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.aact.egu, ...
 gBunchLength.tcav.aact.ts, ...
 gBunchLength.tcav.aact.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.aact.egu_pv.name, ...
        gBunchLength.tcav.aact.egu_pv.force, ...
        gBunchLength.tcav.aact.egu, ...
        gBunchLength.tcav.aact.ts);
gBunchLength.tcav.aact.egu_pv.force = {0};

% The number of tcav phase steps for calibration function
pv = gBunchLength.tcav.cal.num_phase.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.cal.num_phase.desc, ...
 gBunchLength.tcav.cal.num_phase.ts, ...
 gBunchLength.tcav.cal.num_phase.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.cal.num_phase.desc_pv.name, ...
        gBunchLength.tcav.cal.num_phase.desc_pv.force, ...
        gBunchLength.tcav.cal.num_phase.desc, ...
        gBunchLength.tcav.cal.num_phase.ts);
gBunchLength.tcav.cal.num_phase.desc_pv.force = {0};

% The TCAV Settle Time
pv = gBunchLength.tcav.settle_time.pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.settle_time.value, ...
 gBunchLength.tcav.settle_time.ts, ...
 gBunchLength.tcav.settle_time.pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.settle_time.pv.name, ...
        gBunchLength.tcav.settle_time.pv.force, ...
        gBunchLength.tcav.settle_time.value, ...
        gBunchLength.tcav.settle_time.ts);
gBunchLength.tcav.settle_time.pv.force = {0};

pv = gBunchLength.tcav.settle_time.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.settle_time.desc, ...
 gBunchLength.tcav.settle_time.ts, ...
 gBunchLength.tcav.settle_time.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.settle_time.desc_pv.name, ...
        gBunchLength.tcav.settle_time.desc_pv.force, ...
        gBunchLength.tcav.settle_time.desc, ...
        gBunchLength.tcav.settle_time.ts);
gBunchLength.tcav.settle_time.desc_pv.force = {0};

pv = gBunchLength.tcav.settle_time.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.tcav.settle_time.egu, ...
 gBunchLength.tcav.settle_time.ts, ...
 gBunchLength.tcav.settle_time.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.tcav.settle_time.egu_pv.name, ...
        gBunchLength.tcav.settle_time.egu_pv.force, ...
        gBunchLength.tcav.settle_time.egu, ...
        gBunchLength.tcav.settle_time.ts);
gBunchLength.tcav.settle_time.egu_pv.force = {0};

% BPM EGUs
if isfield(gBunchLength.bpm.x,'egu_slc')
else
pv = gBunchLength.bpm.x.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.x.egu, ...
 gBunchLength.bpm.x.ts, ...
 gBunchLength.bpm.x.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.x.egu_pv.name, ...
        gBunchLength.bpm.x.egu_pv.force, ...
        gBunchLength.bpm.x.egu, ...
        gBunchLength.bpm.ts); 
    if isempty(gBunchLength.bpm.x.egu{1})
        gBunchLength.bpm.x.egu_pv.force = {1};
    else
        gBunchLength.bpm.x.egu_pv.force = {0};
    end
end

if isfield(gBunchLength.bpm.tmit,'egu_slc')
else
pv = gBunchLength.bpm.tmit.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.tmit.egu, ...
 gBunchLength.bpm.tmit.ts, ...
 gBunchLength.bpm.tmit.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.tmit.egu_pv.name, ...
        gBunchLength.bpm.tmit.egu_pv.force, ...
        gBunchLength.bpm.tmit.egu, ...
        gBunchLength.bpm.ts); 
    if isempty(gBunchLength.bpm.tmit.egu{1})
        gBunchLength.bpm.tmit.egu_pv.force = {1};
    else
        gBunchLength.bpm.tmit.egu_pv.force = {0};
    end
end

% BPMS calibration parameters
pv = gBunchLength.bpm.blen_phase.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.egu, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.egu_pv.name, ...
        gBunchLength.bpm.blen_phase.egu_pv.force, ...
        gBunchLength.bpm.blen_phase.egu, ...
        gBunchLength.bpm.blen_phase.ts); 
gBunchLength.bpm.blen_phase.egu_pv.force = {0};

pv = gBunchLength.bpm.blen_phase.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.desc, ...
        gBunchLength.bpm.blen_phase.ts);      
gBunchLength.bpm.blen_phase.desc_pv.force = {0};
    
pv = gBunchLength.bpm.blen_phase.apply.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.apply.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.apply.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.apply.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.apply.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.apply.desc, ...
        gBunchLength.bpm.blen_phase.ts);     
gBunchLength.bpm.blen_phase.apply.desc_pv.force = {0};
    
pv = gBunchLength.bpm.blen_phase.gain_factor.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.gain_factor.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.gain_factor.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.gain_factor.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.gain_factor.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.gain_factor.desc, ...
        gBunchLength.bpm.blen_phase.ts);   
gBunchLength.bpm.blen_phase.gain_factor.desc_pv.force = {0};
    
pv = gBunchLength.bpm.blen_phase.y_ref.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.y_ref.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.y_ref.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.y_ref.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.y_ref.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.y_ref.desc, ...
        gBunchLength.bpm.blen_phase.ts);
gBunchLength.bpm.blen_phase.y_ref.desc_pv.force = {0};
 
if isfield(gBunchLength.bpm.blen_phase.y_ref,'egu_slc')
else
pv = gBunchLength.bpm.blen_phase.y_ref.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.y_ref.egu, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.y_ref.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.y_ref.egu_pv.name, ...
        gBunchLength.bpm.blen_phase.y_ref.egu_pv.force, ...
        gBunchLength.bpm.blen_phase.y_ref.egu, ...
        gBunchLength.bpm.blen_phase.ts);     
gBunchLength.bpm.blen_phase.y_ref.egu_pv.force = {0}; 
end
    
pv = gBunchLength.bpm.blen_phase.y_tol.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.y_tol.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.y_tol.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.y_tol.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.y_tol.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.y_tol.desc, ...
        gBunchLength.bpm.blen_phase.ts);
gBunchLength.bpm.blen_phase.y_tol.desc_pv.force = {0};
   
if isfield(gBunchLength.bpm.blen_phase.y_tol,'egu_slc')
else
pv = gBunchLength.bpm.blen_phase.y_tol.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.y_tol.egu, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.y_tol.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.y_tol.egu_pv.name, ...
        gBunchLength.bpm.blen_phase.y_tol.egu_pv.force, ...
        gBunchLength.bpm.blen_phase.y_tol.egu, ...
        gBunchLength.bpm.blen_phase.ts);     
gBunchLength.bpm.blen_phase.y_tol.egu_pv.force = {0};
end

pv = gBunchLength.bpm.blen_phase.tcav_phase.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.tcav_phase.desc, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.tcav_phase.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.tcav_phase.desc_pv.name, ...
        gBunchLength.bpm.blen_phase.tcav_phase.desc_pv.force, ...
        gBunchLength.bpm.blen_phase.tcav_phase.desc, ...
        gBunchLength.bpm.blen_phase.ts);
gBunchLength.bpm.blen_phase.tcav_phase.desc_pv.force = {0};
    
pv = gBunchLength.bpm.blen_phase.tcav_phase.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.bpm.blen_phase.tcav_phase.egu, ...
 gBunchLength.bpm.blen_phase.ts, ...
 gBunchLength.bpm.blen_phase.tcav_phase.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.bpm.blen_phase.tcav_phase.egu_pv.name, ...
        gBunchLength.bpm.blen_phase.tcav_phase.egu_pv.force, ...
        gBunchLength.bpm.blen_phase.tcav_phase.egu, ...
        gBunchLength.bpm.blen_phase.ts);     
gBunchLength.bpm.blen_phase.tcav_phase.egu_pv.force = {0};

% The number of background images
pv = gBunchLength.blen.num_bkg.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.num_bkg.desc, ...
 gBunchLength.blen.num_bkg.ts, ...
 gBunchLength.blen.num_bkg.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.num_bkg.desc_pv.name, ...
        gBunchLength.blen.num_bkg.desc_pv.force, ...
        gBunchLength.blen.num_bkg.desc, ...
        gBunchLength.blen.num_bkg.ts);  
gBunchLength.blen.num_bkg.desc_pv.force = {0};

% The number of foreground images
pv = gBunchLength.blen.num_img.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.num_img.desc, ...
 gBunchLength.blen.num_img.ts, ...
 gBunchLength.blen.num_img.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.num_img.desc_pv.name, ...
        gBunchLength.blen.num_img.desc_pv.force, ...
        gBunchLength.blen.num_img.desc, ...
        gBunchLength.blen.num_img.ts);      
gBunchLength.blen.num_img.desc_pv.force = {0};

% The average TORO TMIT DESC & EGU
if isfield (gBunchLength.blen,'nel')
pv = gBunchLength.blen.nel.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.nel.desc, ...
 gBunchLength.blen.nel.ts, ...
 gBunchLength.blen.nel.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.nel.desc_pv.name, ...
        gBunchLength.blen.nel.desc_pv.force, ...
        gBunchLength.blen.nel.desc, ...
        gBunchLength.blen.nel.ts);      
gBunchLength.blen.nel.desc_pv.force = {0};

pv = gBunchLength.blen.nel.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.nel.egu, ...
 gBunchLength.blen.nel.ts, ...
 gBunchLength.blen.nel.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.nel.egu_pv.name, ...
        gBunchLength.blen.nel.egu_pv.force, ...
        gBunchLength.blen.nel.egu, ...
        gBunchLength.blen.nel.ts);      
gBunchLength.blen.nel.egu_pv.force = {0};
end
      
% The tmit measurement tolerance
pv = gBunchLength.blen.tmit_tol.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.tmit_tol.desc, ...
 gBunchLength.blen.tmit_tol.ts, ...
 gBunchLength.blen.tmit_tol.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.tmit_tol.desc_pv.name, ...
        gBunchLength.blen.tmit_tol.desc_pv.force, ...
        gBunchLength.blen.tmit_tol.desc, ...
        gBunchLength.blen.tmit_tol.ts);      
gBunchLength.blen.tmit_tol.desc_pv.force = {0};

pv = gBunchLength.blen.tmit_tol.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.tmit_tol.egu, ...
 gBunchLength.blen.tmit_tol.ts, ...
 gBunchLength.blen.tmit_tol.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.tmit_tol.egu_pv.name, ...
        gBunchLength.blen.tmit_tol.egu_pv.force, ...
        gBunchLength.blen.tmit_tol.egu, ...
        gBunchLength.blen.tmit_tol.ts);      
gBunchLength.blen.tmit_tol.egu_pv.force = {0};

% The maximum number of pulses the correction function is allowed to use
pv = gBunchLength.blen.cf_np.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.cf_np.desc, ...
 gBunchLength.blen.cf_np.ts, ...
 gBunchLength.blen.cf_np.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.cf_np.desc_pv.name, ...
        gBunchLength.blen.cf_np.desc_pv.force, ...
        gBunchLength.blen.cf_np.desc, ...
        gBunchLength.blen.cf_np.ts);      
gBunchLength.blen.cf_np.desc_pv.force = {0};

% The actual bunch length
pv = gBunchLength.blen.sigx.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.sigx.desc, ...
 gBunchLength.blen.sigx.ts, ...
 gBunchLength.blen.sigx.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.sigx.desc_pv.name, ...
        gBunchLength.blen.sigx.desc_pv.force, ...
        gBunchLength.blen.sigx.desc, ...
        gBunchLength.blen.sigx.ts);      
gBunchLength.blen.sigx.desc_pv.force = {0};

pv = gBunchLength.blen.sigx.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.sigx.egu, ...
 gBunchLength.blen.sigx.ts, ...
 gBunchLength.blen.sigx.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.sigx.egu_pv.name, ...
        gBunchLength.blen.sigx.egu_pv.force, ...
        gBunchLength.blen.sigx.egu, ...
        gBunchLength.blen.sigx.ts);      
gBunchLength.blen.sigx.egu_pv.force = {0};

pv = gBunchLength.blen.mm.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.mm.desc, ...
 gBunchLength.blen.mm.ts, ...
 gBunchLength.blen.mm.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.mm.desc_pv.name, ...
        gBunchLength.blen.mm.desc_pv.force, ...
        gBunchLength.blen.mm.desc, ...
        gBunchLength.blen.mm.ts);      
gBunchLength.blen.mm.desc_pv.force = {0};

pv = gBunchLength.blen.mm.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.mm.egu, ...
 gBunchLength.blen.mm.ts, ...
 gBunchLength.blen.mm.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.mm.egu_pv.name, ...
        gBunchLength.blen.mm.egu_pv.force, ...
        gBunchLength.blen.mm.egu, ...
        gBunchLength.blen.mm.ts);      
gBunchLength.blen.sigx.egu_pv.force = {0};

pv = gBunchLength.blen.sigt.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.sigt.desc, ...
 gBunchLength.blen.sigt.ts, ...
 gBunchLength.blen.sigt.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.sigt.desc_pv.name, ...
        gBunchLength.blen.sigt.desc_pv.force, ...
        gBunchLength.blen.sigt.desc, ...
        gBunchLength.blen.sigt.ts);      
gBunchLength.blen.sigt.desc_pv.force = {0};

pv = gBunchLength.blen.sigt.egu_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.sigt.egu, ...
 gBunchLength.blen.sigt.ts, ...
 gBunchLength.blen.sigt.egu_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.sigt.egu_pv.name, ...
        gBunchLength.blen.sigt.egu_pv.force, ...
        gBunchLength.blen.sigt.egu, ...
        gBunchLength.blen.sigt.ts);      
gBunchLength.blen.sigt.egu_pv.force = {0};

pv = gBunchLength.blen.r35.desc_pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
[gBunchLength.blen.r35.desc, ...
 gBunchLength.blen.r35.ts, ...
 gBunchLength.blen.r35.desc_pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.blen.r35.desc_pv.name, ...
        gBunchLength.blen.r35.desc_pv.force, ...
        gBunchLength.blen.r35.desc, ...
        gBunchLength.blen.r35.ts);      
gBunchLength.blen.r35.desc_pv.force = {0};

% Image Acquisition Available?
pv = gBunchLength.imgAcq.avail.pv.name{1};
if gBunchLength.debug
    disp(sprintf('About to read %s', pv));
end
gBunchLength.imgAcq.avail.pv.force = {1};
[gBunchLength.imgAcq.avail.value, ...
 gBunchLength.imgAcq.avail.ts, ...
 gBunchLength.imgAcq.avail.pv.connected] = ...
    lcaUtil_NewMonitorValue ( ...
        gBunchLength.imgAcq.avail.pv.name, ...
        gBunchLength.imgAcq.avail.pv.force, ...
        gBunchLength.imgAcq.avail.value, ...
        gBunchLength.imgAcq.avail.ts); 

% Matlab Feedback status
for each_pv = 1:length(gBunchLength.fb)
  pv = gBunchLength.fb(each_pv).pv.name{1};
  if gBunchLength.debug
      disp(sprintf('About to read %s', pv));
  end
  [gBunchLength.fb(each_pv).value, ...
   gBunchLength.fb(each_pv).ts, ...
   gBunchLength.fb(each_pv).pv.connected] = ...
      lcaUtil_NewMonitorValue ( ...
          gBunchLength.fb(each_pv).pv.name, ...
          gBunchLength.fb(each_pv).pv.force, ...
          gBunchLength.fb(each_pv).value, ...
          gBunchLength.fb(each_pv).ts);
end
    
catch
    BunchLengthLogMsg(sprintf('Unable to read %s', pv));
    if gBunchLength.debug
        disp(sprintf('Unable to read %s', pv));
    end
end

if gBunchLength.debug
    disp('BunchLengthChannelAccessCallback - exit');
end
